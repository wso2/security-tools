#X-Generator: crowdin.com
# ascanalphaAlpha 
#
# This file defines the default (English) variants of all of the internationalised messages
ascanalpha.desc=Regole di scansione attive - alfa

ascanalpha.cookieslack.name=Rilevatore di Cookie Slack
ascanalpha.cookieslack.desc=Ripetute richieste GET\: eliminare un cookie diverso ogni volta, seguita da una richiesta normale con tutti i cookie per stabilizzare la sessione, confrontare le risposte contro l'originale GET. Questo pu\u00f2 rivelare aree dove l'autenticazione e gli attributi basati sui cookie non vengono effettivamente applicati.
ascanalpha.cookieslack.solution=N.d.
ascanalpha.cookieslack.otherinfo.intro=I biscotti che non hanno effetti attesi possono rivelare difetti nella logica dell'applicazione. Nel peggiore dei casi, questo pu\u00f2 rivelare dove l'autenticazione tramite cookie token(s) non viene effettivamente applicata.\n
ascanalpha.cookieslack.session.warning=Nota\: A causa del suo nome, questo cookie pu\u00f2 essere importante, ma rimuoverlo sembra non avere alcun effetto\: [{0}] \n
ascanalpha.cookieslack.affect.response.yes=Questi cookie hanno influenzato la risposta\: 
ascanalpha.cookieslack.affect.response.no=Questi cookie non hanno influenzato la risposta\: 
ascanalpha.cookieslack.session.destroyed=Eliminare questo cookie sembra avere invalidato la sessione\: [{0}] Una richiesta di proseguimento con tutti i cookie originali aveva ancora una risposta diversa rispetto alla richiesta originale. \n
ascanalpha.cookieslack.separator=,
ascanalpha.cookieslack.endline=\n

ascanalpha.elinjection.name=Iniezione dell'espressione in linguaggio
ascanalpha.elinjection.desc=Il software costruisce tutto o una parte di un'istruzione di expression language (EL) in una pagina Java Server Page (JSP)utilizzando input influenzato esternamente da un componente a monte, ma non neutralizza, o lo fa in maniera incorretta, gli elementi speciali che potrebbero modificare l'istruzione EL originariamente prevista da eseguire. In alcune versioni di Spring 3.0.5 e precedenti, era presente una vulnerabilit\u00e0 (CVE-2011-2730) per la quale i tag EL sarebbero stati valutati due volte, che avrebbe veramente esposto qualsiasi applicazione all'iniezione EL. Tuttavia, anche per le versioni successive, questo problema \u00e8 ancora presente a seconda della configurazione in uso.
ascanalpha.elinjection.soln=Assicurarsi di seguire le migliori tecniche di validazione di dati verso input non attendibile anche per assicurarsi che la codifica dell'output sia applicata quando i dati arrivano allo strato EL, affinch\u00e8 nessun metacarattere sia trovato dall'interprete all'interno del contenuto generato dall'utente prima della valutazione. I modelli pi\u00f9 ovvi da rilevare includono ${\# {, ma pu\u00f2 essere possibile codificare o frammentare questi dati.
ascanalpha.elinjection.refs=https\://www.OWASP.org/index.php/Expression_Language_Injection http\://cwe.mitre.org/data/definitions/917.html

ascanalpha.examplefile.name=Un  esempio di regola di scansione attiva che carica dati da un file
ascanalpha.examplefile.desc=Aggiungere qui maggiori informazioni sulla vulnerabilit\u00e0
ascanalpha.examplefile.other=Questa sezione \u00e8 per informazioni che non rientrano in nessuna altra sezione
ascanalpha.examplefile.soln=Una descrizione generale di come risolvere il problema
ascanalpha.examplefile.refs=http\://zaproxy.blogspot.co.uk/2014/04/hacking-zap-4-active-scan-rules.html

ascanalpha.httpsashttpscanner.name=Contenuti HTTPS disponibili via HTTP
ascanalpha.httpsashttpscanner.desc=Contenuto che \u00e8 stato inizialmente accessibile tramite HTTPS (ad esempio\: utilizzando la crittografia SSL/TLS) \u00e8 accessibile anche via HTTP (senza crittografia). 
ascanalpha.httpsashttpscanner.soln=Assicurarsi che il server web, il server applicativo, il bilanciamento del carico, etc siano configurati per servire contenuti solo tramite HTTPS. Si consideri l'implementazione di HTTP Strict Transport Security.
ascanalpha.httpsashttpscanner.refs=https\://www.OWASP.org/index.php/HTTP_Strict_Transport_Security https\://www.owasp.org/index.php/List_of_useful_HTTP_headers http\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security http\://caniuse.com/stricttransportsecurity http\://tools.ietf.org/html/rfc6797

ascanalpha.integeroverflow.name=Integer Overflow Error
ascanalpha.integeroverflow.desc=An integer overflow condition exists when an integer, which has not been properly checked from the input stream is used within a compiled program. 
ascanalpha.integeroverflow.soln=Rewrite the background program using proper checking of the size of integer being input to prevent overflows and divide by 0 errors.  This will require a recompile of the background executable.
ascanalpha.integeroverflow.refs=https\://www.owasp.org/index.php/Integer_overflow and http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows.
ascanalpha.integeroverflow.error1=Potential Integer Overflow.  Status code changed on the input of a long string of random integers.
ascanalpha.integeroverflow.error2=Potential Integer Overflow.  Status code changed on the input of a long string of zeros.
ascanalpha.integeroverflow.error3=Potential Integer Overflow.  Status code changed on the input of a long string of ones.
ascanalpha.integeroverflow.error4=Potential Integer Overflow.  Status code changed on the input of a long string of nines.

ascanalpha.proxydisclosure.name=Rivelazione di Proxy
ascanalpha.proxydisclosure.desc={0} proxy server sono stati rilevati o identificati. Queste informazioni aiutano un potenziale aggressore a determinare\:\n- un elenco di bersagli per un attacco contro l''applicazione.\n-Potenziali vulnerabilit\u00e0 sui server proxy che erogano i servizi all''applicazione.\n-La presenza o l''assenza di qualsiasi componente basato su proxy che potrebbe causare la rilevazione, la prevenzione o la mitigazione di attacchi contro l''applicazione. 
ascanalpha.proxydisclosure.soln=Disabilitare il metodo 'TRACE' sul server proxy, cos\u00ec come il server web o l'applicazione di origine. Disattivare il metodo di 'TRACE' sui server proxy, come pure il server web/application di origine, se non \u00e8 richiesto per altri scopi, ad esempio 'CORS' (Cross Origin Resource Sharing). Configurare i server web e applicazione con pagine di errore personalizzate, per evitare le pagine di errore 'riconoscibili' e specifiche di prodotto trapelate all'utente in caso di errori HTTP, come ad esempio richieste 'TRACK' per pagine inesistenti. Configurare tutti i server proxy, applicazioni e server per impedire la divulgazione delle informazioni su tecnologia e versioni nell'intestazione della risposta HTTP 'Server' e 'X-Powered-By'.\n
ascanalpha.proxydisclosure.refs=???
ascanalpha.proxydisclosure.attack=Metodi TRACE, OPTIONS con intestazione 'Max-Forwards'. Metodo TRACK.
ascanalpha.proxydisclosure.extrainfo.unknown=Sconosciuto
ascanalpha.proxydisclosure.extrainfo.proxyserver.header=Utilizzando i metodi TRACE, OPTIONS  e TRACK, i seguenti server proxy sono stati identificati tra OWASP ZAP e il server web/applicativo \: 
ascanalpha.proxydisclosure.extrainfo.proxyserver=-{0}
ascanalpha.proxydisclosure.extrainfo.webserver.header=\u00c8 stato individuato il seguente server web/applicativo\: 
ascanalpha.proxydisclosure.extrainfo.webserver=-{0}
ascanalpha.proxydisclosure.extrainfo.silentproxyserver.header=Sono stati identificati i seguenti server proxy 'silenziosi'. A causa del loro comportamento, non \u00e8 noto a quale punto della topologia di rete risiedono questi server proxy\:
ascanalpha.proxydisclosure.extrainfo.silentproxyserver=-{0}
ascanalpha.proxydisclosure.extrainfo.traceenabled=Il metodo 'TRACE' \u00e8 attivato su uno o pi\u00f9 server proxy, o sul server di origine. Questo metodo perde tutte le informazioni inviate dal browser web e dal proxy verso l'agente utente. Questo pu\u00f2 facilitare attacchi 'Cross Site Tracing'. 

ascanalpha.relativepathconfusion.name=Relative Path Confusion
ascanalpha.relativepathconfusion.desc=Il server web \u00e8 configurato per servire le risposte ambigue URL in un modo che rischia di creare confusione circa il corretto "percorso relativo" per l'URL. Risorse (CSS, immagini, ecc.) sono anche specificate nella pagina di risposta utilizzando gli URL relativi invece che assoluti. In un attacco, se il browser web analizza la risposta "cross-content" in maniera permissiva, o pu\u00f2 essere indotto ad interpretare in modo permissivo l'analisi della risposta di "Cross-content", utilizzando tecniche quali il framing, allora il browser web pu\u00f2 essere ingannato nell'interpretare l'HTML come il CSS (o altri tipi di contenuto), determinando una vulnerabilit\u00e0 XSS.
ascanalpha.relativepathconfusion.soln=I server web e le piattaforme devono essere aggiornati per essere configurati in modo da non servire risposte ambigue URL in modo che il percorso relativo di tali URL potrebbe essere mal interpretato dai componenti sul lato client, o lato server. All'interno dell'applicazione, il corretto utilizzo del tag HTML "<base>" nella risposta HTTP senza ambiguit\u00e0 specificher\u00e0 l'URL di base per tutti gli URL relativi nel documento. Utilizzare l'intestazione di risposta HTTP "Content-Type" per rendere pi\u00f9 difficile per l'attaccante forzare il browser web a mal interpretare il tipo di contenuto della risposta. Usare l'intestazione "X-Content-Type-Options\: nosniff" di risposta HTTP per impedire al browser web di "sniffare" il tipo di contenuto della risposta. Utilizzare un DOCTYPE moderno come "<\! doctype html >" per evitare che la pagina venga renderizzata nel browser web utilizzando il "Quirks Mode", poich\u00e9 questo porta il browser web a ignorare il tipo di contenuto. Specificare l'intestazione di risposta HTTP "X-Frame-Options" per impedire al "Quirks Mode" di essere abilitato nel browser web utilizzando gli attacchi framing. 
ascanalpha.relativepathconfusion.refs=http\://www.thespanner.co.uk/2014/03/21/RPO/\nhttps\://hsivonen.fi/doctype/\nhttp\://www.w3schools.com/tags/tag_base.asp
ascanalpha.relativepathconfusion.extrainfo.morethanonebasetag=Pi\u00f9 di un tag <base> specificato nel tag HTML <head>per definire la posizione degli URL relativi, cosa che non \u00e8 valida.
ascanalpha.relativepathconfusion.extrainfo.nobasetag=Nessun tag <base>\u00e8 stato specificato nel tag HTML <head>per definire la posizione degli URL relativi.
ascanalpha.relativepathconfusion.extrainfo.contenttypeenabled=\u00c8 stato specificato un tipo di contenuto di "{0}". Se il browser web utilizza regole rigide di parsing, questo consentir\u00e0 di evitare con successo attacchi cross-content. Il Quirks Mode nel browser web disabiliterebbe l''analisi rigorosa delle pagine.  
ascanalpha.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly=Il Quirks Mode \u00e8 attivato in modo esplicito tramite < meta http-equiv \= "{0}", che permette di aggirare il Content Type specificato .
ascanalpha.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly=Il Quirks Mode \u00e8 attivato in modo implicito attraverso l''uso di un vecchio DOCTYPE con PUBLIC id "{0}", che permette, in alcuni browser web, di aggirare il Content Type specificato .
ascanalpha.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype=Il Quirks Mode \u00e8 implicitamente attivato dall'assenza di un DOCTYPE, permettendo che il Content Type  specificato sia aggirato.
ascanalpha.relativepathconfusion.extrainfo.nocontenttype=Non \u00e8 stato specificato nessun Content Type, quindi il Quirks Mode non \u00e8 necessario per sfruttare le vulnerabilit\u00e0 nel browser web. 
ascanalpha.relativepathconfusion.extrainfo.framingallowed=Non \u00e8 stata specificata alcuna intestazione X-Frame-Options, quindi la pagina pu\u00f2 essere inserita in un frame, e questo pu\u00f2 essere utilizzato per attivare la funzionalit\u00e0 Quirks Mode, permettendo che il Content Type sia aggirato.

ascanalpha.sourcecodedisclosure.desc=Il codice sorgente della pagina attuale \u00e8 stato rivelato dal server web
ascanalpha.sourcecodedisclosure.lfibased.name=Divulgazione di codice sorgente - inclusione di File
ascanalpha.sourcecodedisclosure.lfibased.soln=Assicurarsi che file specificati dall'utente non siano inclusi nell'output
ascanalpha.sourcecodedisclosure.lfibased.extrainfo=L''output per il nome del file di codice sorgente [{0}] differisca sufficientemente da quello del parametro casuale [{1}], [{2}%], rispetto ad una soglia di [{3}%]
ascanalpha.sourcecodedisclosure.lfibased.evidence=

ascanalpha.sourcecodedisclosure.gitbased.name=Divulgazione di codice sorgente - Git 
ascanalpha.sourcecodedisclosure.gitbased.soln=Assicurarsi che i file di metadati Git non vengono distribuiti sul web server o sul server applicativo
ascanalpha.sourcecodedisclosure.gitbased.extrainfo=
ascanalpha.sourcecodedisclosure.gitbased.evidence=Il codice sorgente per [{0}] \u00e8 stato estratto utilizzando [{1}]

ascanalpha.sqlinjection.sqlite.name=Iniezione SQL - SQLite
ascanalpha.sqlinjection.desc=Una iniezione SQL potrebbe essere possibile
ascanalpha.sqlinjection.soln=Non ci si fidi dell'input utente anche se viene effettuata la validazione client side. In linea generale,\nsi controlli il tipo di tutti i dati a lato server.\nSe l'applicazione utilizza JDBC, si usi PreparedStatement o CallableStatement con parametri passati via '?'.\nSe l'applicazione utilizza ASP, si usino gli Oggetti ADO Command con controllo tipizzato e query parametrizzate.\nSe lato database possono essere utilizzate Stored Procedures, le si usino. Non si concatenino stringhe in query nelle stored procedure, o utilizzi 'exec', 'exec immediate', o istruzioni equivalenti\!\nNon si creino query SQL dinamiche utilizzando la semplice concatenazione delle stringhe.\nSi sanitizzino tutti i dati ricevuti dal client.\nSi adotti una 'whitelist' di caratteri permessi, o una 'blacklist' di caratteri non consentiti nell'input utente.\nSi adotti il principio del privilegio minimo utilizzando l'utente del database con il minor numero di privilegi possibili.In particolare, si eviti di utilizzare il 'sa' o gli utenti 'db-owner'. Questo non eliminer\u00e0 eventuali SQL injection, ma ridurr\u00e0 al minimo il loro impatto.\nSi conceda nel database l'accesso minimo necessario al funzionamento dell'applicazione.
ascanalpha.sqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanalpha.sqlinjection.sqlite.alert.timebased.extrainfo=Il tempo di query \u00e8 controllabile utilizzando il valore del parametro [{0}], il quale ha causato l''impiego di [{1}] millisecondi per completare la richiesta, il valore del parametro [{2}], che ha causato l''impiego di [{3}] millisecondi, quando la query originale non modificatacon valore [{4}] ha impiegato [{5}] millisecondi.
ascanalpha.sqlinjection.sqlite.alert.errorbased.extrainfo=Il messaggio di errore conosciuto di SQLite \u00e8 stato causato\: [{0}].
ascanalpha.sqlinjection.sqlite.alert.versionnumber.extrainfo=Utilizzando un attacco Iniezione SQL basato su di una Unione, e sfruttando il meccanismo di tipizzazione dinamica di SQLite, la versione di SQLite \u00e8 stata determinata essere [{0}]. Con punti di iniezione basati su stringa, le informazioni complete di versione di SQLite possono essere estratte, ma con punti di iniezione numerico, possono essere estratte solo parziali informazioni sulla versione di SQLite. Ulteriori informazioni sulla versione di SQLite [{0}] sono disponibili presso http\://www.sqlite.org/changes.html

ascanalpha.testuseragent.name=User Agent Fuzzer
ascanalpha.testuseragent.desc=Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.
ascanalpha.testuseragent.refs=https\://www.owasp.org/index.php/Web_Application_Security_Testing_Cheat_Sheet
ascanalpha.testuseragent.useragentparmname=Header User-Agent
